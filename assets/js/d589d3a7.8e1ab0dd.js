"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{6475:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"Let\'s get Lyra set up in your game and cover the basics of saving player data.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/paradoxum-games/lyra/edit/main/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Introduction","permalink":"/docs/intro"},"next":{"title":"Core Concepts","permalink":"/docs/core-concepts"}}');var a=r(4848),i=r(8453);const s={sidebar_position:2},d="Getting Started",o={},l=[{value:"Installation",id:"installation",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Working with Data",id:"working-with-data",level:2},{value:"Reading Data",id:"reading-data",level:3},{value:"Modifying Data",id:"modifying-data",level:3},{value:"Trading Between Players",id:"trading-between-players",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Importing Existing Data",id:"importing-existing-data",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,a.jsx)(n.p,{children:"Let's get Lyra set up in your game and cover the basics of saving player data."}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["Add Lyra to your ",(0,a.jsx)(n.code,{children:"wally.toml"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-toml",children:'[dependencies]\r\nLyra = "paradoxum-games/lyra@0.1.0"\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you're new to Wally, check out the ",(0,a.jsx)(n.a,{href:"https://wally.run/install",children:"Wally installation guide"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,a.jsx)(n.p,{children:"Here's how to set up Lyra with a simple data structure:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'local Players = game:GetService("Players")\r\nlocal Lyra = require(path.to.Lyra)\r\n\r\n-- Define your data template\r\nlocal template = {\r\n    coins = 0,\r\n    inventory = {},\r\n}\r\n\r\n-- Create schema to validate data\r\nlocal schema = t.strictInterface({\r\n    coins = t.number,\r\n    inventory = t.table,\r\n})\r\n\r\n-- Create the store\r\nlocal store = Lyra.createPlayerStore({\r\n    name = "PlayerData",\r\n    template = template,\r\n    schema = schema,\r\n})\r\n\r\n-- Load data when players join\r\nPlayers.PlayerAdded:Connect(function(player)\r\n    store:load(player):andThen(function()\r\n        print("Data loaded for", player.Name)\r\n    end):catch(warn)\r\nend)\r\n\r\n-- Save and clean up when they leave\r\nPlayers.PlayerRemoving:Connect(function(player)\r\n    store:unload(player):catch(warn)\r\nend)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"working-with-data",children:"Working with Data"}),"\n",(0,a.jsx)(n.h3,{id:"reading-data",children:"Reading Data"}),"\n",(0,a.jsx)(n.p,{children:"You can read player data, but remember that it might change between reads:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'store:get(player):andThen(function(data)\r\n    -- \u26a0\ufe0f Only use this data for reading\r\n    -- Don\'t save it for later use\r\n    print(player.Name, "has", data.coins, "coins")\r\nend)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"modifying-data",children:"Modifying Data"}),"\n",(0,a.jsx)(n.p,{children:"Always modify data through update functions:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'-- Simple update\r\nstore:update(player, function(data)\r\n    data.coins += 100\r\n    return true\r\nend)\r\n\r\n-- Conditional update\r\nstore:update(player, function(data)\r\n    if data.coins < itemPrice then\r\n        return false -- Abort the update\r\n    end\r\n    \r\n    data.coins -= itemPrice\r\n    table.insert(data.inventory, itemId)\r\n    return true\r\nend):andThen(function()\r\n    print("Purchase successful!")\r\nend):catch(function(err)\r\n    if err:match("Update aborted") then\r\n        print("Not enough coins!")\r\n    else\r\n        warn("Error:", err)\r\n    end\r\nend)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"trading-between-players",children:"Trading Between Players"}),"\n",(0,a.jsx)(n.p,{children:"Use transactions for operations involving multiple players:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"store:tx({player1, player2}, function(state)\r\n    -- Transfer coins\r\n    if state[player1].coins < amount then\r\n        return false -- Abort if not enough coins\r\n    end\r\n    \r\n    state[player1].coins -= amount\r\n    state[player2].coins += amount\r\n    return true\r\nend)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,a.jsx)(n.p,{children:"Lyra operations return promises that you can handle in different ways:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'-- Using :expect(), which will throw an error if the operation fails\r\nstore:update(player, function(data)\r\n    data.coins -= itemPrice\r\n    data.inventory.weapon = "starter_sword"\r\n    return true\r\nend):expect()\r\n\r\n-- Using :andThen() and :catch()\r\nstore:update(player, function(data)\r\n    data.coins -= itemPrice\r\n    data.inventory.weapon = "starter_sword"\r\n    return true\r\nend):andThen(function()\r\n    print("Purchase successful!")\r\nend):catch(function(err)\r\n    print("Purchase failed:", err)\r\nend)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"importing-existing-data",children:"Importing Existing Data"}),"\n",(0,a.jsx)(n.p,{children:"If you're migrating from another system, you can import your existing data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'local store = Lyra.createPlayerStore({\r\n    name = "PlayerData",\r\n    template = template,\r\n    schema = schema,\r\n    importLegacyData = function(key)\r\n        local success, data = pcall(function()\r\n            return YourCurrentSystem.getData(key)\r\n        end)\r\n        \r\n        if not success then\r\n            error("Failed to reach data system") -- Player will be kicked and can retry\r\n        end\r\n\r\n        if data ~= nil then\r\n            return data -- Return existing data to import\r\n        end\r\n        \r\n        return nil -- Return nil for new players to use template\r\n    end,\r\n})\n'})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"Now that you've got the basics down, check out:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/core-concepts",children:"Core Concepts"})," for a deeper understanding"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/advanced/migrations",children:"Data Migrations"})," for updating data structure"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/advanced/networking",children:"Network Updates"})," for client synchronization"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/advanced/debugging",children:"Debugging"})," for troubleshooting"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var t=r(6540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);